import os

from datetime import datetime, timezone
from openpyxl import Workbook
from openpyxl.drawing.image import Image
from openpyxl.styles import Alignment, Font, PatternFill, Border, Side


class XlsxFile(object):
    def __init__(self, filename):
        self.dir_path = os.path.dirname(os.path.realpath(__file__))
        self.workbook = Workbook()
        self.filename = filename
        self.default_border = Border(
            left=Side(border_style="thin"), right=Side(border_style="thin"),
            top=Side(border_style="thin"), bottom=Side(border_style="thin")
        )

    def create_compliance_report_template(self, report_details):
        self.create_title_tab()
        self.create_overview_tab(report_details)
        self.create_table_of_contents(report_details)

    def create_title_tab(self):
        sheet = self.workbook.active
        sheet.title = "Title"

        # Fill color for background
        fill = PatternFill(start_color="ebe4e2", end_color="ebe4e2", fill_type="solid")
        for row in range(1, 37):
            for col in range(1, 7):
                cell = sheet.cell(row=row, column=col)
                cell.fill = fill
        # Increase row height
        for i in range(48):
            sheet.row_dimensions[i+1].height = 15.75
        # Increase column width
        for col in ["A", "B", "C", "D", "E", "F"]:
            sheet.column_dimensions[col].width = 13
        # Add top left logo
        logo_path = os.path.join(self.dir_path, "report_assets", "logo1.png")
        img = Image(logo_path)
        img.width = 150
        img.height = 50
        sheet.add_image(img, "A1")
        # Add central image
        image_path = os.path.join(self.dir_path, "report_assets", "asset1.png")
        img = Image(image_path)
        img.anchor = "A6"
        img.width = 540
        img.height = 270
        sheet.add_image(img)
        # Add bottom right asset
        asset_path = os.path.join(self.dir_path, "report_assets", "asset2.png")
        img = Image(asset_path)
        img.anchor = "E35"
        img.width = 160
        img.height = 35
        sheet.add_image(img)
        # Add central text
        sheet.merge_cells("B20:E24")
        merged_cell = sheet["B20"]
        merged_cell.alignment = Alignment(horizontal="center", vertical="center", wrapText=True)
        merged_cell.font = Font(name="Helvetica", size=20, bold=True)
        sheet["B20"] = self.filename.replace(".xlsx", "")
        # Add central text
        sheet.merge_cells("B26:E27")
        merged_cell = sheet["B26"]
        merged_cell.alignment = Alignment(horizontal="center", vertical="center", wrapText=True)
        merged_cell.font = Font(name="Helvetica", size=14)
        sheet["B26"] = "Generated by Lightlytics"

    def create_overview_tab(self, report_details):
        # Sheet general configuration
        sheet = self.workbook.create_sheet(title="Overview")
        sheet.column_dimensions['A'].width = 30
        sheet.column_dimensions['B'].width = 45
        for i in range(8):
            sheet.row_dimensions[i+1].height = 30

        # Sheet "Report Summary" header
        sheet.merge_cells("A1:B1")
        merged_cell = sheet["A1"]
        merged_cell.alignment = Alignment(horizontal="center", vertical="center")
        merged_cell.font = Font(name="Helvetica", size=10, bold=True)
        sheet["A1"].fill = PatternFill(start_color="D6DCE4", end_color="D6DCE4", fill_type="solid")
        sheet["A1"] = "Report Summary"

        # Content headers
        for i, cell_content in enumerate(
                ["Report Name", "Description", "Date Generated (dd/mm/yyyy)",
                 "Total controls included", "AWS Accounts in scope",
                 "Assessment report selection"]):
            sheet[f"A{i + 2}"] = cell_content
            sheet[f"A{i + 2}"].font = Font(name="Helvetica", size=10, bold=True)
            sheet[f"A{i + 2}"].alignment = Alignment(horizontal="left", vertical="center")

        # Actual Content
        sheet["B2"] = self.filename.replace(".xlsx", "")
        sheet["B3"] = f'AWS {report_details["compliance_name"]} assessment report'
        sheet["B4"] = datetime.now(timezone.utc).strftime("%d/%m/%Y %H:%M:%S") + " UTC"
        sheet["B5"] = str(report_details["total_rules"]) + " rules"
        sheet["B6"] = str(report_details["total_accounts"]) + " accounts"
        sheet["B7"] = str(report_details["total_violations"]) + " resources"

        # Footer
        sheet.merge_cells("A8:B8")
        merged_cell = sheet["A8"]
        merged_cell.alignment = Alignment(horizontal="center", vertical="center")
        merged_cell.font = Font(name="Helvetica", size=10, bold=True, color="FFFFFF")
        sheet["A8"].fill = PatternFill(start_color="000000", end_color="000000", fill_type="solid")
        sheet["A8"] = "Generated by Lightlytics"

    def create_table_of_contents(self, report_details):
        # Sheet general configuration
        sheet = self.workbook.create_sheet(title="Table of Contents")
        sheet.column_dimensions['A'].width = 20
        sheet.column_dimensions['B'].width = 10
        sheet.column_dimensions['C'].width = 20
        sheet.column_dimensions['D'].width = 20
        sheet.column_dimensions['E'].width = 10
        for i in range(4):
            sheet.row_dimensions[i + 1].height = 30

        # Sheet "Table of Contents" header
        sheet.merge_cells("A1:E1")
        merged_cell = sheet["A1"]
        merged_cell.alignment = Alignment(horizontal="center", vertical="center")
        merged_cell.font = Font(name="Helvetica", size=10, bold=True)
        sheet["A1"].fill = PatternFill(start_color="D6DCE4", end_color="D6DCE4", fill_type="solid")
        sheet["A1"] = "Table of Contents"

        # Content headers
        for i, cell_content in enumerate(["Total rules", "Total rules violated"]):
            sheet[f"A{i + 2}"] = cell_content
            sheet[f"A{i + 2}"].font = Font(name="Helvetica", size=10, bold=True)
            sheet[f"A{i + 2}"].alignment = Alignment(horizontal="left", vertical="center", wrapText=True)

        # Actual Content
        sheet.merge_cells("B2:E2")
        sheet["B2"] = report_details["total_rules"]
        sheet["B2"].alignment = Alignment(wrapText=True)
        sheet.merge_cells("B3:E3")
        sheet["B3"] = len(report_details["violated_rules"])

        # Resources Table
        for i, rule in enumerate(report_details["all_rules"]):
            # Row height
            sheet.row_dimensions[i + 5].height = 25

            # Rule Name
            font = Font(name="Helvetica", size=10)
            alignment = Alignment(wrapText=True)
            sheet.merge_cells(f"A{i + 5}:B{i + 5}")
            sheet[f"A{i + 5}"] = rule["name"]
            sheet[f"A{i + 5}"].font = font
            sheet[f"A{i + 5}"].alignment = alignment

            # Rule name border
            sheet[f"A{i + 5}"].border = self.default_border
            sheet[f"B{i + 5}"].border = self.default_border

            # Rule Severity
            severities = {4: "Critical", 3: "High", 2: "Medium", 1: "Low"}
            rule_severity = rule["severity"]
            sheet[f"C{i + 5}"] = f"Severity: {severities[rule_severity]}"
            sheet[f"C{i + 5}"].border = self.default_border
            sheet[f"C{i + 5}"].font = font
            sheet[f"C{i + 5}"].alignment = alignment

            # Rule passed/failed
            sheet.merge_cells(f"D{i + 5}:E{i + 5}")
            if len(rule['violations']) > 0:
                font = Font(color="FF0000")
                sheet[f"D{i + 5}"] = f"Failed ({len(rule['violations'])} violations)"
                sheet[f"D{i + 5}"].font = font
                sheet[f"D{i + 5}"].border = self.default_border
            else:
                font = Font(color="00B050")
                sheet[f"D{i + 5}"] = "Passed"
                sheet[f"D{i + 5}"].font = font
                sheet[f"D{i + 5}"].border = self.default_border
            sheet[f"E{i + 5}"].border = self.default_border

        # Footer
        row_number = len(report_details["all_rules"]) + 5
        sheet.merge_cells(f"A{row_number}:E{row_number}")
        merged_cell = sheet[f"A{row_number}"]
        merged_cell.alignment = Alignment(horizontal="center", vertical="center")
        merged_cell.font = Font(name="Helvetica", size=12, bold=True, color="FFFFFF")
        sheet[f"A{row_number}"].fill = PatternFill(start_color="000000", end_color="000000", fill_type="solid")
        sheet[f"A{row_number}"] = "Generated by Lightlytics"
        sheet.row_dimensions[row_number].height = 30

    def create_new_rule_sheet(self, report_details, violated_rule, rule_number, ws_accounts):
        # Sheet general configuration
        title_name = violated_rule["name"].replace("*", "").replace(":", "").replace("(", "").replace(")", "")
        sheet = self.workbook.create_sheet(title=title_name[0:30])
        sheet.column_dimensions['A'].width = 20
        sheet.column_dimensions['B'].width = 18
        sheet.column_dimensions['C'].width = 18
        sheet.column_dimensions['D'].width = 10
        sheet.column_dimensions['E'].width = 10
        for i in range(4):
            sheet.row_dimensions[i+1].height = 30

        # Sheet "Rule Name" header
        sheet.merge_cells("A1:E1")
        merged_cell = sheet["A1"]
        merged_cell.alignment = Alignment(horizontal="center", vertical="center")
        merged_cell.font = Font(name="Helvetica", size=10, bold=True)
        sheet["A1"].fill = PatternFill(start_color="D6DCE4", end_color="D6DCE4", fill_type="solid")
        sheet["A1"] = f"{rule_number}. {violated_rule['name']}"

        # Content headers
        for i, cell_content in enumerate(["Control name", "Assessment report summary"]):
            sheet[f"A{i + 2}"] = cell_content
            sheet[f"A{i + 2}"].font = Font(name="Helvetica", size=10, bold=True)
            sheet[f"A{i + 2}"].alignment = Alignment(horizontal="left", vertical="center", wrapText=True)

        # Actual Content
        sheet.merge_cells("B2:E2")
        sheet["B2"] = violated_rule["name"]
        sheet["B2"].alignment = Alignment(wrapText=True)
        total_resources = sum([a[1]["total_resources"] for a in violated_rule["violated_resources"].items()])
        total_violations = sum([len(a[1]["resource_ids"]) for a in violated_rule["violated_resources"].items()])
        total_compliant = total_resources - total_violations
        sheet.merge_cells("B3:E3")
        sheet["B3"] = f"{total_resources} ({total_compliant} Compliant, {total_violations} Non-compliant)"

        # Resources Table
        for i, account in enumerate(ws_accounts):
            sheet[f"A{i + 5}"] = account["display_name"]
            sheet[f"A{i + 5}"].border = self.default_border
            sheet[f"B{i + 5}"] = account["cloud_account_id"]
            sheet[f"B{i + 5}"].border = self.default_border
            account_violation_count = len(
                violated_rule["violated_resources"][account["cloud_account_id"]]["resource_ids"])
            total_account_resources = \
                violated_rule["violated_resources"][account["cloud_account_id"]]["total_resources"]
            sheet[f"C{i + 5}"] = f"{account_violation_count} violations out of {total_account_resources}"
            sheet[f"C{i + 5}"].border = self.default_border
            ll_url = report_details['ll_url']
            ws_id = report_details['ws_id']
            sheet[f"D{i + 5}"].hyperlink = \
                f"{ll_url}/w/{ws_id}/rules/{violated_rule['id']}" \
                f"?f%5Baccount_id%5D%5B0%5D={account['cloud_account_id']}"
            font = Font(underline="single", color="0000FF")
            sheet[f"D{i + 5}"].font = font
            sheet[f"D{i + 5}"].value = "Evidence"
            sheet[f"D{i + 5}"].border = self.default_border
            if account_violation_count > 0:
                font = Font(color="FF0000")
                sheet[f"E{i + 5}"] = "Failed"
                sheet[f"E{i + 5}"].font = font
                sheet[f"E{i + 5}"].border = self.default_border
            else:
                font = Font(color="00B050")
                sheet[f"E{i + 5}"] = "Passed"
                sheet[f"E{i + 5}"].font = font
                sheet[f"E{i + 5}"].border = self.default_border

        # Footer
        row_number = len(ws_accounts) + 5
        sheet.merge_cells(f"A{row_number}:E{row_number}")
        merged_cell = sheet[f"A{row_number}"]
        merged_cell.alignment = Alignment(horizontal="center", vertical="center")
        merged_cell.font = Font(name="Helvetica", size=12, bold=True, color="FFFFFF")
        sheet[f"A{row_number}"].fill = PatternFill(start_color="000000", end_color="000000", fill_type="solid")
        sheet[f"A{row_number}"] = "Generated by Lightlytics"
        sheet.row_dimensions[row_number].height = 30

    def save_xlsx(self):
        self.workbook.save(self.filename)
